rm -f .zsh_history
cd. zsh
nvim .zshrc
cd 
cd .local/share
touch .zsh_history
vim .zshenv
echo $HISTFILE
echo $XDG_DATA_HOME
cd .local
cd share
ls -la
cat .zsh_history
rm -rf zsh
nvim .zshenv
echo $FPATH
cd dev/project
cd aw
echo $GOPATH
echo $PATH
/etc
cd usr
cd local
cd openssl
git clone https://github.com/powerline/fonts.git --depth=1
ls -l
./install.sh
echo $fpath
vmi
vim .zsh/.zshrc
cd .zplug
cd zsh-users
cd dikiaap
cd bin
false
true
PWD
vim xterm-256color.ti
echo $TERM
vim .oxide-theme
mv .oxide-theme .oxide-theme.zsh
dotfiles
mkdir hoge
hoge
touch hoge
touch huga
git status --porcelain
git status --porcelain | grep --max-count=1 '^??'
source .zsh/.zshrc
vim .oxide-theme.zsh
mkdir aaa
cd aaa
cd .git
git rev-parse --is-inside-work-tree
cp .oxide-theme.zsh .theme.zsh
aws
touch hogehoge
zsh --version
man zshcontrib
cd dev/project/todo/client
git sy
cd aws
git rev-list origin/master..master | wc -l
git rev-list origin/master..master | wc -l | tr ' '
git rev-list origin/master..master | wc -l | tr -d ' '
git remote add origin git@github.com.main:yinhr/git-playground.git
git ci -m "initial commit"
vim hoge
vim hogehoge
rm -f huga
git checkout -b dev
vim huga
git co master
git merge dev
cd dev/project/todo/aws
cd backend
cd hoge
rm -rf hoge
mkdir git-playground
cd git-
echo "# git-playground" >> README.md
git commit -m "Initial commit"
git push -u origin master
touch sample.txt
vim sample.txt
git add .
git ci -m "Add sample.txt"
cd project/todo/aws
git rev-list master..origin/master
git rev-list origin/master..master
git fetch
git merge origin/master
cd git
git stash apply stash@{0}
vim .zshrc.bk
rm -f .zshrc.bk
rm -r .oxide-theme.zsh
vim test.txt
git stash
git-playground
lls
ls -lG
ls -l -G
pkg
tree
tree -a
tree -ad
vim .zprofile
cd .zs
mkdir tmp
mv .bash_history .bash_profile .bashrc tmp
mv .bash_sessions/ tmp
cd .docker
cat neomake.rc.vim
touch denite.rc.vim
cd .zah
vim options.rc.vim
brew list | grep nvim
brew list | grep neovim
brew unlink tfenv
brew list | tmux
brew list | grep tmux
gem install neovim
gem list installed
sudo gem install neovim
~
cd Shougo
cd denite.nvim
vim README.md
vim denite.txt
vim keymap.rc.vim
touch test
vim --version
nvim --version
server
cd client
cd rails_tutorial
cd hello_app
cd zsh
brew install the_silver_searcher
pro
cd plugins/
c
project
todo
client
cd .config/nvim/plugins
brew list | grep boost
brew install boost
vim init.vim
grep *.vim
ls | grep *.vim
ls -l | grep *.vim
grep
grep -nore denite.rc.vim
grep -e "nore" denite.rc.vim
grep -e "nore" -H denite.rc.vim
grep -e "nore" -iH denite.rc.vim
grep -e "denite" -iH denite.rc.vim
grep -e "denite" -inH denite.rc.vim
grep -e "denite" -inH -r denite.rc.vim
ag go .
ag -r false go .
ag -r false channel .
ag -d 1 go
.config
nvim
grep "vim" plugins/denite.rc.vim
ls -a
rm -rf test
.zsh
zcompile .zshrc
vim \
vim \
vim
dein
cd scroolppse
cd scrooloose
vim ..
vim dein
repos
github.com
cd hynek
vim neomake.rc.vim
rm -f neomake.rc.vim
git stash list
git stash drop stash@{0}
git push
rm -f lightline.rc.vim
cd dev/git-playground
cd git-playground
.
lla
lla | grep .config
vim .gitignore
pwd
rm -f .gitignore
rm -rf .git
cat dump.rdb
vim .test2
cd dotfiles
cd doc
vim LICENSE-MIT.txt
vim .tmux.conf
vim airline.rc.vim
vim test
vim test.vim
rm -f test.vim
cd prmcy
vim dein.rc.vim
vim channel.go
rm -f vimshell.rc.vim
rm -f test
vim neoterm.rc.vim
rm -f neoterm.rc.vim
../..
cd plugins
cd ../..
look hello
rm -f neocomplete.rc.vim
âƒ½¯
cat input2 | ./mai
cat input2 | ./main
~/dev/golang/members-edge
]
go get golang.org/x/tour/pic
go build ./main.go
cd nvim
vim dein.toml
vim deinlazy.toml
vim denite.rc.vim
echo $GOMODULE111
cd dev/project/todo
cd server
echo $GO111MODULE
vim util/handler.go
cd golang-sample
go list
go get golang.org/x/tools/cmd/gopls
cd .condig
cd basicGo
vim error.go
cd dev/project/todo/server
vim server.go
mkdir members-edge
go mod init
cd go
cd src
cd github.com
cd yinhr
go mod init github.com/yinhr/members-edge
go get golang.org/x/tools/cmd/goimports
vim go.mod
cat "hoge" | go run ./main.go
echo "hoge" | go run ./main.go
echo "hoge" | ./main
echo "hoge\nhoge" | ./main
echo "hogenhoge" | ./main
vim ma
.s
mv memo.go sinippets.go
mv sinippets.go snippets.go
cd .cache
cd dein
cd repos
cd tmp/
cd fonts
cd Cousine
vim README.rst
vim Cousine\ for\ Powerline.ttf
mkdir atourofgo
go mod init github.com/yinhr/a-tour-of-go
cd golang
mv atourofgo/ ../
vim atourofgo
cd atourofgo
cd sample
vim main
vim rm -f input2
rm -f input2
mkdir snippets.go
mkdir snippets
mv snippets.go snippets
./main
cd nvim/plugins
touch neosnippet.rc.vim
mkdir test
go mod init github.com/yinhr/test
cp members-edge/main.go ./test
vim input
vi main.go
cd .config/nvim
cd .config
cd dev/golang/members-edge
cd project
mkdir todo
docker run -p 1234:1234 3f45e966bb60
docker run -p 1234:1234 dbba59b30d8e
docker run -p 1234:1234 f770f6eab3b4
docker stop 62413c586ad0
docker build .
vim .zshrc
cd calc
go test -v
go test -v -run TestSum
go clean -testcache
go test
go test ./...
go test -v -run "Sum$"
go help testfunc
go help test
go help test | less
go test -bench ./...
cd cat
go test -bench .
go test -bench
go test -bench ./cat
go test -v ./...
go test -v -bench .
go test -v -bench ./cat
cd dev/project/api
cd todo
go mod init github.com/yinhr/api-todo
git init
l
git logs
git log
cd etc
vim update-rbenv.sh
cd tmp
curl https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-274.0.0-darwin-x86_64.tar.gz
curl -o google-cloud-sdk-274.0.0-darwin-x86_64.tar.gz https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-sdk-274.0.0-darwin-x86_64.tar.gz
tar -zxvf google-cloud-sdk-274.0.0-darwin-x86_64.tar.gz
cd google-cloud-sdk
vim install.sh
./google-cloud-sdk/install.sh
source $ZDOTDIR/.zshrc
gcloud version
cd dev/project/api/todo
docker build -t yinhr/api-sample:v1 .
docker run -p 1234:1234 yinhr/api-sample:v1
docker ps
docker prune system
docker system prune
docker ps -a
gcloud init
gcloud projects list
gcloud config list
docker tag yinhr/api-sample:v1 gcr.io/api-sample-262914/api-sample
docker images
gcloud docker -- push gcr.io/api-sample-262914/api-sample
rm -f app.yaml
git
git st
vim app.yaml
gcloud app deploy
vim Dockerfile
cd
cd github
cd module_test
mkdir ut
cd ut
go mod init github.com/yinhr/ut-sample
mkdir example
mv example.go example_test.go
cd example
vi example.go
vim example.go
cd..
mkdir benchmark
cd benchmark
go mod init github.com/yinhr/bm-sample
mkdir cat
go build main.go
cat input | ./main
cd assertion
..
ll
mkdir parallel
go mod init github.com/yinhr/parallel
brew link --overwrite --dry-run python
brew link --overwrite python
brew link --overwrite kubernetes-cli
xcode-select --install
neovim-node-host
yarn global add neovim
npm install -g neovim
node version
node --version
yarn list
which neovim-node-host
cd parallel
rm -r parallel
mkdir concurrent
go mod init github.com/yinhr/concurrent
cd paiza
cd members-edge
cd test
~/dev/golang/concurrent
cd dev/golang
cd concurrent
go test -benchtime=10s -bench=.
cd dev
concurrent
vim main.go
go run ./main.go
dev
golang
concurrent/
LS
\:q
brew update
brew upgrade
go --version
go version
cd ..
cd api
mkdir api
api
vim
cd .zsh
la
vim .theme.zsh
ls
